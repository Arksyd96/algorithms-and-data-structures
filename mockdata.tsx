export const dataCategories: any = {
    'Primitive types': [
        'Boolean',
        'Integer',
        'Character',
        'Float and double',
        'Pointer',
        'Enumeration'
    ],
    'Data structures': {
        'Arrays': [
            'Array',
            'Bit array',
            'Bit field',
            'Circular buffer',
            'Dynamic array',
            'Gap buffer',
            'Hashed array tree',
            'Lookup table',
            'Matrix',
            'Parallel array',
            'Sorted array',
            'Sparse matrix',
        ],
        'Lists': [
            'Doubly linked list',
            'Array list',
            'Linked list',
            'Association list',
            'Self-organizing list',
            'Skip list',
            'Unrolled linked list',
            'VList',
            'Conc-tree list',
            'Xor linked list',
            'Zipper',
            'Difference list',
            'Free list'
        ],
        'Trees': {
            'Binary trees': [
                'AA tree',
                'AVL tree',
                'Binary search tree',
                'Binary tree',
                'Cartesian tree',
                'Conc-tree list',
                'Left-child right-sibling binary tree',
                'Order statistic tree',
                'Pagoda',
                'Randomized binary search tree',
                'Red–black tree',
                'Rope',
                'Scapegoat tree',
                'Self-balancing binary search tree',
                'Splay tree',
                'T-tree',
                'Tango tree',
                'Threaded binary tree',
                'Top tree',
                'Treap',
                'WAVL tree',
                'Weight-balanced tree'
            ],
            'B-trees': [
                'B-tree',
                'B+ tree',
                'B*-tree',
                'B sharp tree',
                'Dancing tree',
                '2-3 tree',
                '2-3-4 tree',
                'Queap',
                'Fusion tree',
                'Bx-tree',
                'AList'
            ],
            'Heaps': [
                'Heap',
                'Binary heap',
                'B-heap',
                'Weak heap',
                'Binomial heap',
                'Fibonacci heap',
                'AF-heap',
                'Leonardo Heap',
                '2-3 heap',
                'Soft heap',
                'Pairing heap',
                'Leftist heap',
                'Treap',
                'Beap',
                'Skew heap',
                'Ternary heap',
                'D-ary heap',
                'Brodal queue'
            ],
            'Multiway trees': [
                'Ternary tree',
                'K-ary tree',
                'And–or tree',
                '(a,b)-tree',
                'Link/cut tree',
                'SPQR-tree',
                'Spaghetti stack',
                'Disjoint-set data structure',
                'Fusion tree',
                'Enfilade',
                'Exponential tree',
                'Fenwick tree',
                'Van Emde Boas tree',
                'Rose tree'
            ]
        },
        'Hash-based structures': [
            'Bloom filter',
            'Count-Min sketch',
            'Distributed hash table',
            'Double hashing',
            'Dynamic perfect hash table',
            'Hash array mapped trie',
            'Hash list',
            'Hash table',
            'Hash tree',
            'Hash trie',
            'Koorde',
            'Prefix hash tree',
            'Rolling hash',
            'MinHash',
            'Quotient filter',
            'Ctrie'
        ]
    }
}

